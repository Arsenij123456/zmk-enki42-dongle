/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        copu {
            bindings = <&kp LC(C)>;
            key-positions = <25 26>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <26 27>;
        };

        win {
            bindings = <&kp LEFT_WIN>;
            key-positions = <36 37>;
        };

        eskape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        languge {
            bindings = <&kp LS(LEFT_ALT)>;
            key-positions = <24 25 26>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <10 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LCTRL RIGHT_BRACKET  &kp Q  &kp W  &kp E        &kp R            &kp T        &kp Y      &kp U                     &kp I            &kp O    &kp P     &mt RWIN LEFT_BRACKET
&mt TAB GRAVE            &kp A  &kp S  &kp D        &kp F            &kp G        &kp H      &kp J                     &kp K            &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT BSLH            &kp Z  &kp X  &kp C        &kp V            &kp B        &kp N      &kp M                     &kp COMMA        &kp DOT  &kp FSLH  &mt RALT MINUS
                                       &lt 1 LCTRL  &mt LSHFT SPACE  &lt 2 RET    &lt 2 ESC  &mt RIGHT_SHIFT LEFT_WIN  &lt 1 BACKSPACE
            >;
        };

        lower_layer {
            bindings = <
&kp ESCAPE  &bt BT_CLR  &kp C_VOLUME_UP    &none        &none                 &tog 0          &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &kp RIGHT_BRACKET
&kp TAB     &none       &kp C_VOLUME_DOWN  &none        &none                 &tog 3          &bt BT_CLR_ALL  &none         &kp STAR      &kp LPAR      &mt COLON SEMICOLON  &kp MINUS
&kp LALT    &none       &none              &none        &none                 &kp LEFT_WIN    &kp UP          &none         &none         &kp PERIOD    &mt QUESTION SLASH   &mt RALT MINUS
                                           &lt 1 LCTRL  &mt LEFT_SHIFT SPACE  &lt 2 ENTER     &kp LEFT        &kp DOWN      &kp RIGHT
            >;
        };

        raise_layer {
            bindings = <
&kp F1           &kp F2        &kp F3        &kp F4        &kp F5                 &kp F6          &kp F7         &kp F8                    &kp F9                &kp F10                &kp F11         &kp F12
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                 &kp NUMBER_6    &kp N7         &kp N8                    &kp N9                &kp N0                 &kp MINUS       &kp EQUAL
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT            &kp CARET       &kp AMPERSAND  &kp ASTERISK              &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE
                                             &lt 3 RCTRL   &mt RIGHT_SHIFT SPACE  &lt 2 RET       &lt 2 ESC      &mt RIGHT_SHIFT LEFT_WIN  &lt 3 BACKSPACE
            >;
        };

        adjust_layer {
            bindings = <
&kp ESC         &kp Q  &kp W  &kp E      &kp R           &kp T        &kp NUMBER_1     &kp NUMBER_2       &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6
&kp TAB         &kp A  &kp S  &kp D      &kp F           &kp G        &kp H            &kp J              &kp K         &kp L         &kp SEMICOLON  &lt 2 F
&lt 1 LEFT_ALT  &kp Z  &kp X  &kp C      &kp V           &kp B        &kp N            &kp M              &kp COMMA     &kp PERIOD    &kp SLASH      &tog 0
                              &kp LCTRL  &kp LEFT_SHIFT  &kp SPACE    &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp LEFT_WIN
            >;
        };
    };
};
